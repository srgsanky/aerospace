# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
# Start https://github.com/FelixKratz/JankyBorders. Use "man borders" for documentation on the
# options.
# NOTE: You need to specify the alpha as the first component of the color (FF). Otherwise the color
#       won't show up.
# A color formatted as 0xAARRGGBB, where A is the alpha channel, R the red channel, G the green
# channel and B the blue channel. All constituents take a base 16 number, i.e. 0-F.
#
# Run Sketchybar together with AeroSpace
# sketchbar has a built-in detection of already running process,
# so it won't be run twice on AeroSpace restart
after-startup-command = [
  'exec-and-forget borders style=round hidpi=on active_color=0xffffa500 inactive_color=0xff494d64 width=7.0',
  'exec-and-forget sketchybar',
]

# Notify Sketchybar about workspace change
exec-on-workspace-change = [
  '/bin/bash',
  '-c',
  'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 200

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
# Gap between windows
inner.horizontal = 12
inner.vertical = 12

# Gap between window and monitor edge
outer.left = 0
outer.bottom = 40 # Bottom gap is to show the sketchy bar
outer.top = 6
outer.right = 0

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
# "--boundaries-action stop" will prevent the focus from wrapping around.
# The default was wrap-around-the-workspace
alt-h = 'focus --boundaries-action stop left'
alt-j = 'focus --boundaries-action stop down'
alt-k = 'focus --boundaries-action stop up'
alt-l = 'focus --boundaries-action stop right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
# alt-5 = 'workspace 5'
# alt-6 = 'workspace 6'
# alt-7 = 'workspace 7'
# alt-8 = 'workspace 8'
# alt-9 = 'workspace 9'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace 1'
alt-shift-2 = 'move-node-to-workspace 2'
alt-shift-3 = 'move-node-to-workspace 3'
alt-shift-4 = 'move-node-to-workspace 4'
# alt-shift-5 = 'move-node-to-workspace 5'
# alt-shift-6 = 'move-node-to-workspace 6'
# alt-shift-7 = 'move-node-to-workspace 7'
# alt-shift-8 = 'move-node-to-workspace 8'
# alt-shift-9 = 'move-node-to-workspace 9'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# https://nikitabobko.github.io/AeroSpace/commands#fullscreen
# Full screen in the desktop
alt-shift-f = 'fullscreen'
# Macos full screen
alt-shift-t = 'macos-native-fullscreen'
alt-shift-m = 'macos-native-minimize'

# Float and unfloat. Mnemonics - [O]ut/[I]in layout system.
# Earlier I tried the mnemonic [D]etach/[A]ttach from the layout system, but the shortcut conflicts
# with toggling dark mode in chrome.
alt-shift-o = 'layout floating'
alt-shift-i = 'layout tiling'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

# App specific configurations
#
# Common app ids: <https://nikitabobko.github.io/AeroSpace/goodness#popular-apps-ids>
#
# You can find bundle Id of running apps using "aerospace list-apps"
#
# app-id is the CFBundleIdentifier found inside Info.plist. For e.g.
# rg -A1 CFBundleIdentifier /Applications/WhatsApp.app/Contents/Info.plist
#
# check-further-callbacks is like break statement in switch. No further rule is evaluated if false
# which is also the default.

# WARN: move-node-to-workspace has to be the last in a multi-instruction run configuration. For e.g.
#       ['layout floating', 'move-node-to-workspace S']
# WARN: Only layout floating/tiling are support.

# Change layout of the focused window to the given layout
[[on-window-detected]]
if.app-id = 'com.apple.ActivityMonitor'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.Calculator'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.docker.docker'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.FaceTime'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.weather'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.stocks'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'org.videolan.vlc'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.QuickTimePlayerX'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'org.xquartz.X11'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.reminders'
run = 'layout floating'

##################################################################
# Use workspace 1 for terminal
##################################################################

[[on-window-detected]]
if.app-id = 'com.github.wez.wezterm'
run = 'move-node-to-workspace 1'

[[on-window-detected]]
if.app-id = 'com.googlecode.iterm2'
run = 'move-node-to-workspace 1'

[[on-window-detected]]
if.app-id = 'com.apple.Terminal'
run = 'move-node-to-workspace 1'

# zathura has NULL-APP-BUNDLE-ID as bundle Id. So, I am using the app name instead.
[[on-window-detected]]
if.app-name-regex-substring = 'zathura'
run = 'move-node-to-workspace 1'

##################################################################
# Use workspace 2 for all browsers
##################################################################

[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'org.mozilla.firefox'
run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'com.apple.Safari'
run = 'move-node-to-workspace 2'

##################################################################
# Use workspace 3 for misc windows
##################################################################

[[on-window-detected]]
if.app-id = 'abnerworks.Typora'
run = 'move-node-to-workspace 3'

[[on-window-detected]]
if.app-id = 'com.sublimetext.4'
run = 'move-node-to-workspace 3'

[[on-window-detected]]
if.app-id = 'com.electron.amazonconnections'
run = 'move-node-to-workspace 3'

[[on-window-detected]]
if.app-id = 'com.cisco.anyconnect.gui'
run = ['layout floating', 'move-node-to-workspace 3']

[[on-window-detected]]
if.app-id = 'com.apple.AppStore'
run = ['layout floating', 'move-node-to-workspace 3']

[[on-window-detected]]
if.app-id = 'com.apple.Home'
run = ['layout floating', 'move-node-to-workspace 3']

[[on-window-detected]]
if.app-id = 'com.apple.iMovieApp'
run = ['layout floating', 'move-node-to-workspace 3']

[[on-window-detected]]
if.app-id = 'com.apple.FinalCut'
run = ['layout floating', 'move-node-to-workspace 3']

##################################################################
# Use workspace 4 for all communicator apps
##################################################################

# Slack
[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = ['move-node-to-workspace 4']

# Outlook
[[on-window-detected]]
# https://learn.microsoft.com/en-us/microsoft-365-apps/mac/preferences-outlook
if.app-id = 'com.microsoft.Outlook'
run = ['move-node-to-workspace 4']

# Chime
[[on-window-detected]]
if.app-id = 'com.amazon.Amazon-Chime'
run = ['move-node-to-workspace 4']

[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = 'move-node-to-workspace 4'

[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
run = 'move-node-to-workspace 4'

[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = 'move-node-to-workspace 4'
